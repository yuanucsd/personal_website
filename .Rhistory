theme(plot.title = element_text(size = 32, hjust = 0.5))+
theme(axis.title.x = element_text(size=30))+
theme(axis.title.y = element_text(size=30))+
theme(axis.text.x = element_text(size = 26))+
theme(axis.text.y = element_text(size =26))+
theme(strip.text.x = element_text(size = 31))+
theme(legend.text = element_text(size = 30))+
theme(legend.title = element_text(size = 30))
# Add accuracy text
#citation
#accuracy: 97%
#chance: 38%
#sandhi
#accuracy: 61%
#chance:34%
dat_text <- data.frame(
label = c("Accuracy: 97% \nChance: 38% \np-value < .001", "Accuracy: 61% \nChance: 34% \np-value < .001"),
type   = c("Citation", "Sandhi"),
x     = c(-4,-9),
y     = c(-2,3.5))
tiff(file = "E:/fieldwork_xiapu_summer2019/experiment/10_person_experiment/graph/lda/contrast_55.tiff", width=14, height=8, units = 'in', res = 500, bg = "transparent")
lda55 + geom_text(data = dat_text,
mapping = aes(x = x, y = y, label = label), color ="black",show.legend = FALSE,hjust = 0,size = 10)
dev.off()
############df_42_cite#############
lda_model.42.cite = lda(lda_formula, data = df_42_cite)
lda_scores.42.cite= lda(lda_formula, data = df_42_cite, CV = TRUE)
confusionMatrix(lda_scores.42.cite$class, df_42_cite$target_tone)
round(prop.table(confusionMatrix(lda_scores.42.cite$class, df_42_cite$target_tone)$table), 2)
#accuracy: 1
#chance:0.56
predict.42.cite = predict(lda_model.42.cite)$x %>%
as.data.frame() %>%
mutate(target_tone = df_42_cite$target_tone,
type = "Citation")
predict.42.cite %>%
ggplot(aes(x = LD1, fill = target_tone)) +
geom_histogram(alpha = 0.5,binwidth = 0.5) +
scale_fill_manual(values=c('#66c2a5','#5e3c99')) +
ldahist(predict.42.cite$LD1, g = df_42_cite$target_tone)
#######df_42_sandhi########
lda_model.42.san = lda(lda_formula, data = df_42_san)
lda_scores.42.san = lda(lda_formula, data = df_42_san, CV = TRUE)
confusionMatrix(lda_scores.42.san$class, df_42_san$target_tone)
round(prop.table(confusionMatrix(lda_scores.42.san$class, df_42_san$target_tone)$table), 2)
#accuracy: 0.4621
#chance: 0.53
#p-value: 0.9721
predict.42.san = predict(lda_model.42.san)$x %>%
as.data.frame() %>%
mutate(target_tone = df_42_san$target_tone,
type = "Sandhi")
ldahist(predict.42.san$LD1, g = df_42_san$target_tone)
predict.42 = rbind(predict.42.cite,predict.42.san)
lda42 = predict.42 %>%
ggplot(aes(x = LD1, fill = target_tone, color = target_tone)) +
#  geom_histogram(alpha = 0.5,bins = 50) +
geom_density(alpha = 0.5)+
scale_fill_manual(values=c('#66c2a5','#5e3c99')) +
scale_color_manual(values=c('#66c2a5','#5e3c99')) +
facet_grid(.~type)+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
ggtitle("LD1 of T42 vs T11 before and after sandhi \n{T42,T11} \u2192 T42 / {T44, T42}__") +
labs(fill = "Tone")+
theme(plot.title = element_text(size = 32, hjust = 0.5))+
theme(axis.title.x = element_text(size=30))+
theme(axis.title.y = element_text(size=30))+
theme(axis.text.x = element_text(size = 26))+
theme(axis.text.y = element_text(size =26))+
theme(strip.text.x = element_text(size = 31))+
theme(legend.text = element_text(size = 30))+
theme(legend.title = element_text(size = 30))+
guides(color=FALSE)
#accuracy: 1
#chance:0.56
#accuracy: 0.4621
#chance: 0.53
#p-value: 0.9721
dat_text <- data.frame(
label = c("Accuracy: 100% \nChance: 56% \np-value < .001", "Accuracy: 46% \nChance: 53% \np-value: 0.972"),
type   = c("Citation", "Sandhi"),
x     = c(-1.5,-6),
y     = 0.46)
tiff(file = "E:/fieldwork_xiapu_summer2019/experiment/10_person_experiment/graph/lda/contrast_42.tiff", width=14, height=8, units = 'in', res = 500, bg = "transparent")
lda42 + geom_text(data = dat_text,
mapping = aes(x = x, y = y, label = label,
fill = NA),
color = "black",
show.legend = FALSE,
hjust = 0,size = 10)
dev.off()
#########df_5_cite########
lda_model.5.cite = lda(lda_formula, data = df_5_cite)
lda_scores.5.cite= lda(lda_formula, data = df_5_cite, CV = TRUE)
confusionMatrix(lda_scores.5.cite$class, df_5_cite$target_tone)
round(prop.table(confusionMatrix(lda_scores.5.cite$class, df_5_cite$target_tone)$table), 2)
#accuracy: 0.9375
#chance: 0.59
predict.5.cite = predict(lda_model.5.cite)$x %>%
as.data.frame() %>%
mutate(target_tone = df_5_cite$target_tone,
type = "Citation")
ldahist(predict.5.cite$LD1, g = df_5_cite$target_tone)
##########df_5_sandhi############
lda_model.5.san = lda(lda_formula, data = df_5_san)
lda_scores.5.san= lda(lda_formula, data = df_5_san, CV = TRUE)
confusionMatrix(lda_scores.5.san$class, df_5_san$target_tone)
round(prop.table(confusionMatrix(lda_scores.5.san$class, df_5_san$target_tone)$table), 2)
#accuracy: 0.614
#chance: 0.58
#pvalue: 0.254
predict.5.san = predict(lda_model.5.san)$x %>%
as.data.frame() %>%
mutate(target_tone = df_5_san$target_tone,
type = "Sandhi")
ldahist(predict.5.san$LD1, g = df_5_san$target_tone)
predict.5 = rbind(predict.5.cite, predict.5.san)
lda5 = predict.5 %>%
ggplot(aes(x = LD1, fill = target_tone, color = target_tone)) +
#  geom_histogram(alpha = 0.5,bins = 50) +
geom_density(alpha = 0.5)+
scale_fill_manual(values=c('#fc8d62','#b2df8a')) +
scale_colour_manual(values=c('#fc8d62','#b2df8a')) +
facet_grid(.~type)+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
ggtitle("LD1 of T5 vs. T2 before and after sandhi \n{T5,T2} \u2192 T5 / {T44, T42}__") +
labs(fill = "Tone")+
theme(plot.title = element_text(size = 32, hjust = 0.5))+
theme(axis.title.x = element_text(size=30))+
theme(axis.title.y = element_text(size=30))+
theme(axis.text.x = element_text(size = 26))+
theme(axis.text.y = element_text(size =26))+
theme(strip.text.x = element_text(size = 31))+
theme(legend.text = element_text(size = 30))+
theme(legend.title = element_text(size = 30))+
guides(color=FALSE)
df.full = read_csv("E:/fieldwork_xiapu_summer2019/experiment/10_person_experiment/result/9-point/full_zscore_cite_sandhi.csv")
df.full = df.full %>%
filter(!is.na(energyz)) %>%
mutate(target_tone = as.factor(target_tone))
model.position.h1c.covariant <- lm(h1cz ~ energyz, data = df.full)
energy.factor = coef(model.position.h1c.covariant)[2]
df.full$H1c.resid = df.full$h1cz - df.full$energyz * energy.factor
df.full.dur = df.full %>%
dplyr::select(duration, seg_Start, seg_End)
#####average into three intervals######
df.full$three_interval[df.full$time %in% c(1,2,3)] = 1
df.full$three_interval[df.full$time %in% c(4,5,6)] = 2
df.full$three_interval[df.full$time %in% c(7,8,9)] = 3
df.threeinterval = df.full %>%
group_by(idnum, three_interval) %>%
summarize(mean.f0 = mean(f0, na.rm = T),
mean.f0z = mean(f0z, na.rm = T),
mean.H1c.resid = mean(H1c.resid, na.rm = T),
mean.hnrz = mean(hnrz, na.rm = T),
subject = unique(subject),
Filename = unique(Filename),
segment = unique(segment),
target_tone = unique(target_tone),
environment_tone = unique(environment_tone),
sandhi_position = unique(sandhi_position),
rep = unique (rep),
seg_Start = unique(seg_Start),
seg_End = unique(seg_End),
duration = unique(duration),
type = unique(type),
filen = unique(filen),
duration = duration/3)
df.spread.f0 = df.threeinterval %>%
dplyr::select(-mean.f0z, -mean.H1c.resid,-mean.hnrz) %>%
spread(three_interval, mean.f0) %>%
dplyr::rename(f0_001 = "1",
f0_002 = "2",
f0_003 = "3")
df.spread.f0z = df.threeinterval %>%
dplyr::select(-mean.f0, -mean.H1c.resid,-mean.hnrz) %>%
spread(three_interval, mean.f0z) %>%
dplyr::rename(f0z_001 = "1",
f0z_002 = "2",
f0z_003 = "3")
df.spread.H1c.resid = df.threeinterval %>%
dplyr::select(-mean.f0, -mean.f0z,-mean.hnrz) %>%
spread(three_interval, mean.H1c.resid) %>%
dplyr::rename(H1c.resid_001 = "1",
H1c.resid_002 = "2",
H1c.resid_003 = "3")
df.spread.hnrz = df.threeinterval %>%
dplyr::select(-mean.f0, -mean.H1c.resid,-mean.f0z) %>%
spread(three_interval, mean.hnrz) %>%
dplyr::rename(hnrz_001 = "1",
hnrz_002 = "2",
hnrz_003 = "3")
df.spread = list(df.spread.f0,df.spread.f0z,df.spread.H1c.resid, df.spread.hnrz, df.spread.duration) %>%
reduce(merge, by = c("idnum", "subject", "Filename", "segment",
"target_tone","environment_tone","sandhi_position","rep",
"seg_Start","seg_End","type","filen","duration")) %>%
filter(!is.na(f0z_001) & !is.na(f0z_002) & !is.na(f0z_003)&
!is.na(H1c.resid_001) & !is.na(H1c.resid_002) & !is.na(H1c.resid_003)&
!is.na(hnrz_001) & !is.na(hnrz_002) & !is.na(hnrz_003)&
!is.na(duration_001) & !is.na(duration_002) & !is.na(duration_003))
df.spread = list(df.spread.f0,df.spread.f0z,df.spread.H1c.resid, df.spread.hnrz) %>%
reduce(merge, by = c("idnum", "subject", "Filename", "segment",
"target_tone","environment_tone","sandhi_position","rep",
"seg_Start","seg_End","type","filen","duration")) %>%
filter(!is.na(f0z_001) & !is.na(f0z_002) & !is.na(f0z_003)&
!is.na(H1c.resid_001) & !is.na(H1c.resid_002) & !is.na(H1c.resid_003)&
!is.na(hnrz_001) & !is.na(hnrz_002) & !is.na(hnrz_003)&
!is.na(duration_001) & !is.na(duration_002) & !is.na(duration_003))
df.spread = list(df.spread.f0,df.spread.f0z,df.spread.H1c.resid, df.spread.hnrz) %>%
reduce(merge, by = c("idnum", "subject", "Filename", "segment",
"target_tone","environment_tone","sandhi_position","rep",
"seg_Start","seg_End","type","filen","duration")) %>%
filter(!is.na(f0z_001) & !is.na(f0z_002) & !is.na(f0z_003)&
!is.na(H1c.resid_001) & !is.na(H1c.resid_002) & !is.na(H1c.resid_003)&
!is.na(hnrz_001) & !is.na(hnrz_002) & !is.na(hnrz_003))
df_44_23_cite = df.spread %>%
mutate(filen = as.numeric(filen)) %>%
filter(filen %in% c(1:5) & type == "cite") %>%
droplevels()
df_44_2_cite = df.spread %>%
filter(filen %in% c(10:15) & type == "cite") %>%
droplevels()
df_23_2_cite = df.spread %>%
filter(filen %in% c(6:9) & type == "cite") %>%
droplevels()
df_55_cite = df.spread %>%
filter(filen %in% c(16:24) & type == "cite") %>%
droplevels()
df_42_cite = df.spread %>%
filter(filen %in% c(48:63) & type == "cite") %>%
droplevels()
df_5_cite = df.spread %>%
filter(filen %in% c(64:76) & type == "cite") %>%
droplevels()
df_44_23_san = df.spread %>%
filter(filen %in% c(1:10) & type == "sandhi")%>%
droplevels()
df_44_2_san = df.spread %>%
filter(filen %in% c(19:28)& type == "sandhi")%>%
droplevels()
df_23_2_san = df.spread %>%
filter(filen %in% c(11:18)& type == "sandhi")%>%
droplevels()
df_55_san = df.spread %>%
filter(filen %in% c(29:43)& type == "sandhi")%>%
droplevels()
df_42_san = df.spread %>%
filter(filen %in% c(84:103)& type == "sandhi")%>%
droplevels()
df_5_san = df.spread %>%
filter(filen %in% c(104:121)& type == "sandhi")%>%
droplevels()
df_44_san = rbind(df_44_23_san, df_44_2_san, df_23_2_san) %>%
droplevels()
df_44_cite = rbind(df_44_23_cite, df_44_2_cite, df_23_2_cite) %>%
droplevels()
df_44 = rbind(df_44_san, df_44_cite)
df_44_23 = rbind(df_44_23_cite, df_44_23_san)
df_44_2 = rbind(df_44_2_cite, df_44_2_san)
df_23_2 = rbind(df_23_2_cite, df_23_2_san)
df_55 = rbind(df_55_cite, df_55_san)
df_42 = rbind(df_42_cite, df_42_san)
df_5 = rbind(df_5_cite, df_5_san)
#######df_44_cite###########
depend.var = c("f0z_001","f0z_002","f0z_003","H1c.resid_001","H1c.resid_002","H1c.resid_003",
"hnrz_001","hnrz_002","hnrz_003", "duration_001")
lda_formula = as.formula(paste('target_tone ~ ', paste(depend.var, collapse = '+')))
lda_model.44.cite = lda(lda_formula, data = df_44_cite)
lda_scores.44.cite= lda(lda_formula, data = df_44_cite, CV = TRUE)
confusionMatrix(lda_scores.44.cite$class, df_44_cite$target_tone)
round(prop.table(confusionMatrix(lda_scores.44.cite$class, df_44_cite$target_tone)$table), 2)
#######df_44_cite###########
depend.var = c("f0z_001","f0z_002","f0z_003","H1c.resid_001","H1c.resid_002","H1c.resid_003",
"hnrz_001","hnrz_002","hnrz_003", "duration")
lda_formula = as.formula(paste('target_tone ~ ', paste(depend.var, collapse = '+')))
lda_model.44.cite = lda(lda_formula, data = df_44_cite)
lda_scores.44.cite= lda(lda_formula, data = df_44_cite, CV = TRUE)
confusionMatrix(lda_scores.44.cite$class, df_44_cite$target_tone)
round(prop.table(confusionMatrix(lda_scores.44.cite$class, df_44_cite$target_tone)$table), 2)
predict.44.cite = predict(lda_model.44.cite)$x %>% # not the good CV predictions
as.data.frame() %>%
mutate(target_tone = df_44_cite$target_tone,
type = "Citation")
predict.44.cite %>%
ggplot(aes(LD1, LD2, color=target_tone)) +
geom_point(alpha = 0.5)+
stat_ellipse(level = 0.5, size=2)+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_color_manual(values=c('#a6cee3','#1f78b4','#b2df8a'))+
ggtitle("{T44,T23,T2} \u2192 T44 / __X") +
labs(color = "Tone")+
theme(plot.title = element_text(size = 24, hjust = 0.5))+
theme(axis.title.x = element_text(size=19))+
theme(axis.title.y = element_text(size=19))+
theme(axis.text.x = element_text(size = 18))+
theme(axis.text.y = element_text(size =18))
lda_model.44.san = lda(lda_formula, data = df_44_san)
lda_scores.44.san = lda(lda_formula, data = df_44_san, CV = TRUE)
confusionMatrix(lda_scores.44.san$class, df_44_san$target_tone)
round(prop.table(confusionMatrix(lda_scores.44.san$class, df_44_san$target_tone)$table), 2)
predict.44.san = predict(lda_model.44.san)$x %>% # not the good CV predictions
as.data.frame() %>%
mutate(target_tone = df_44_san$target_tone,
type = "Sandhi")
predict.44.san %>%
ggplot(aes(LD1, LD2, color=target_tone)) +
stat_ellipse(level = 0.5, size=2)
predict.44 = rbind(predict.44.cite, predict.44.san)
lda44 = predict.44 %>%
ggplot(aes(x = LD1, y = LD2, color = target_tone)) +
geom_point(size = 0.7, alpha = 0.5)+
facet_grid(.~$type)+
annotate("text", x = 5, y = -2.5, label = "test")
predict.44 = predict.44 %>%
mutate(as.factor(type))
lda44 = predict.44 %>%
ggplot(aes(x = LD1, y = LD2, color = target_tone)) +
geom_point(size = 1, alpha = 1)+
stat_ellipse(level = 0.5, size = 2)+
facet_grid(.~type)+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_color_manual(values=c('#a6cee3','#1f78b4','#b2df8a'))+
ggtitle("LD1-LD2 of T44 vs T23 vs T2 before and after sandhi \n{T44,T23,T2} \u2192 T44 / __X") +
labs(color = "Tone")+
theme(plot.title = element_text(size = 32, hjust = 0.5))+
theme(axis.title.x = element_text(size=30))+
theme(axis.title.y = element_text(size=30))+
theme(axis.text.x = element_text(size = 26))+
theme(axis.text.y = element_text(size =26))+
theme(strip.text.x = element_text(size = 31))+
theme(legend.text = element_text(size = 30))+
theme(legend.title = element_text(size = 30))
# Add accuracy text
dat_text <- data.frame(
label = c("Accuracy: 94% \nChance: 46% \np-value < .001", "Accuracy: 59% \nChance: 34% \np-value < .001"),
type   = c("Citation", "Sandhi"),
x     = 1.8,
y     = -2.8)
tiff(file = "E:/fieldwork_xiapu_summer2019/experiment/10_person_experiment/graph/lda/contrast_44.tiff", width=14, height=8, units = 'in', res = 500, bg = "transparent")
lda44 + geom_text(data = dat_text,
mapping = aes(x = x, y = y, label = label), color ="black",show.legend = FALSE,hjust = 0,size = 10)
dev.off()
lda_model.55.cite = lda(lda_formula, data = df_55_cite)
lda_scores.55.cite= lda(lda_formula, data = df_55_cite, CV = TRUE)
confusionMatrix(lda_scores.55.cite$class, df_55_cite$target_tone)
round(prop.table(confusionMatrix(lda_scores.55.cite$class, df_55_cite$target_tone)$table), 2)
predict.55.cite = predict(lda_model.55.cite)$x %>% # not the good CV predictions
as.data.frame() %>%
mutate(target_tone = df_55_cite$target_tone,
type = "Citation")
predict.55.cite %>%
ggplot(aes(LD1, LD2, color=target_tone)) +
stat_ellipse(level=0.5, size=2)
lda_model.55.san = lda(lda_formula, data = df_55_san)
lda_scores.55.san= lda(lda_formula, data = df_55_san, CV = TRUE)
confusionMatrix(lda_scores.55.san$class, df_55_san$target_tone)
round(prop.table(confusionMatrix(lda_scores.55.san$class, df_55_san$target_tone)$table), 2)
predict.55.san = predict(lda_model.55.san)$x %>% # not the good CV predictions
as.data.frame() %>%
mutate(target_tone = df_55_san$target_tone,
type = "Sandhi")
predict.55 = rbind(predict.55.cite,predict.55.san)
lda55 = predict.55 %>%
ggplot(aes(x = LD1, y = LD2, color = target_tone)) +
geom_point(size = 1, alpha = 1)+
stat_ellipse(level = 0.5, size = 2)+
facet_grid(.~type)+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_colour_manual(values=c('#66c2a5','#8da0cb','#fc8d62')) +
ggtitle("LD1-LD2 of T42 vs T35 vs T5 before and after sandhi \n{T42,T35,T5} \u2192 T55 / __X") +
labs(color = "Tone")+
theme(plot.title = element_text(size = 32, hjust = 0.5))+
theme(axis.title.x = element_text(size=30))+
theme(axis.title.y = element_text(size=30))+
theme(axis.text.x = element_text(size = 26))+
theme(axis.text.y = element_text(size =26))+
theme(strip.text.x = element_text(size = 31))+
theme(legend.text = element_text(size = 30))+
theme(legend.title = element_text(size = 30))
dat_text <- data.frame(
label = c("Accuracy: 97% \nChance: 38% \np-value < .001", "Accuracy: 61% \nChance: 34% \np-value < .001"),
type   = c("Citation", "Sandhi"),
x     = c(-4,-9),
y     = c(-2,3.5))
tiff(file = "E:/fieldwork_xiapu_summer2019/experiment/10_person_experiment/graph/lda/contrast_55.tiff", width=14, height=8, units = 'in', res = 500, bg = "transparent")
lda55 + geom_text(data = dat_text,
mapping = aes(x = x, y = y, label = label), color ="black",show.legend = FALSE,hjust = 0,size = 10)
dev.off()
lda_model.42.cite = lda(lda_formula, data = df_42_cite)
lda_scores.42.cite= lda(lda_formula, data = df_42_cite, CV = TRUE)
confusionMatrix(lda_scores.42.cite$class, df_42_cite$target_tone)
round(prop.table(confusionMatrix(lda_scores.42.cite$class, df_42_cite$target_tone)$table), 2)
predict.42.cite = predict(lda_model.42.cite)$x %>%
as.data.frame() %>%
mutate(target_tone = df_42_cite$target_tone,
type = "Citation")
predict.42.cite %>%
ggplot(aes(x = LD1, fill = target_tone)) +
geom_histogram(alpha = 0.5,binwidth = 0.5) +
scale_fill_manual(values=c('#66c2a5','#5e3c99')) +
ldahist(predict.42.cite$LD1, g = df_42_cite$target_tone)
lda_model.42.san = lda(lda_formula, data = df_42_san)
lda_scores.42.san = lda(lda_formula, data = df_42_san, CV = TRUE)
confusionMatrix(lda_scores.42.san$class, df_42_san$target_tone)
round(prop.table(confusionMatrix(lda_scores.42.san$class, df_42_san$target_tone)$table), 2)
predict.42.san = predict(lda_model.42.san)$x %>%
as.data.frame() %>%
mutate(target_tone = df_42_san$target_tone,
type = "Sandhi")
ldahist(predict.42.san$LD1, g = df_42_san$target_tone)
predict.42 = rbind(predict.42.cite,predict.42.san)
lda42 = predict.42 %>%
ggplot(aes(x = LD1, fill = target_tone, color = target_tone)) +
#  geom_histogram(alpha = 0.5,bins = 50) +
geom_density(alpha = 0.5)+
scale_fill_manual(values=c('#66c2a5','#5e3c99')) +
scale_color_manual(values=c('#66c2a5','#5e3c99')) +
facet_grid(.~type)+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
ggtitle("LD1 of T42 vs T11 before and after sandhi \n{T42,T11} \u2192 T42 / {T44, T42}__") +
labs(fill = "Tone")+
theme(plot.title = element_text(size = 32, hjust = 0.5))+
theme(axis.title.x = element_text(size=30))+
theme(axis.title.y = element_text(size=30))+
theme(axis.text.x = element_text(size = 26))+
theme(axis.text.y = element_text(size =26))+
theme(strip.text.x = element_text(size = 31))+
theme(legend.text = element_text(size = 30))+
theme(legend.title = element_text(size = 30))+
guides(color=FALSE)
dat_text <- data.frame(
label = c("Accuracy: 100% \nChance: 56% \np-value < .001", "Accuracy: 46% \nChance: 53% \np-value: 0.972"),
type   = c("Citation", "Sandhi"),
x     = c(-1.5,-6),
y     = 0.46)
tiff(file = "E:/fieldwork_xiapu_summer2019/experiment/10_person_experiment/graph/lda/contrast_42.tiff", width=14, height=8, units = 'in', res = 500, bg = "transparent")
lda42 + geom_text(data = dat_text,
mapping = aes(x = x, y = y, label = label,
fill = NA),
color = "black",
show.legend = FALSE,
hjust = 0,size = 10)
dev.off()
lda_model.5.cite = lda(lda_formula, data = df_5_cite)
lda_scores.5.cite= lda(lda_formula, data = df_5_cite, CV = TRUE)
confusionMatrix(lda_scores.5.cite$class, df_5_cite$target_tone)
round(prop.table(confusionMatrix(lda_scores.5.cite$class, df_5_cite$target_tone)$table), 2)
predict.5.cite = predict(lda_model.5.cite)$x %>%
as.data.frame() %>%
mutate(target_tone = df_5_cite$target_tone,
type = "Citation")
ldahist(predict.5.cite$LD1, g = df_5_cite$target_tone)
lda_model.5.san = lda(lda_formula, data = df_5_san)
lda_scores.5.san= lda(lda_formula, data = df_5_san, CV = TRUE)
confusionMatrix(lda_scores.5.san$class, df_5_san$target_tone)
round(prop.table(confusionMatrix(lda_scores.5.san$class, df_5_san$target_tone)$table), 2)
predict.5.san = predict(lda_model.5.san)$x %>%
as.data.frame() %>%
mutate(target_tone = df_5_san$target_tone,
type = "Sandhi")
ldahist(predict.5.san$LD1, g = df_5_san$target_tone)
predict.5 = rbind(predict.5.cite, predict.5.san)
lda5 = predict.5 %>%
ggplot(aes(x = LD1, fill = target_tone, color = target_tone)) +
#  geom_histogram(alpha = 0.5,bins = 50) +
geom_density(alpha = 0.5)+
scale_fill_manual(values=c('#fc8d62','#b2df8a')) +
scale_colour_manual(values=c('#fc8d62','#b2df8a')) +
facet_grid(.~type)+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
ggtitle("LD1 of T5 vs. T2 before and after sandhi \n{T5,T2} \u2192 T5 / {T44, T42}__") +
labs(fill = "Tone")+
theme(plot.title = element_text(size = 32, hjust = 0.5))+
theme(axis.title.x = element_text(size=30))+
theme(axis.title.y = element_text(size=30))+
theme(axis.text.x = element_text(size = 26))+
theme(axis.text.y = element_text(size =26))+
theme(strip.text.x = element_text(size = 31))+
theme(legend.text = element_text(size = 30))+
theme(legend.title = element_text(size = 30))+
guides(color=FALSE)
dat_text <- data.frame(
label = c("Accuracy: 94% \nChance: 59% \np-value < .001", "Accuracy: 61% \nChance: 58% \np-value: 0.254"),
type   = c("Citation", "Sandhi"),
x     = -4.3,
y     = 0.486)
tiff(file = "E:/fieldwork_xiapu_summer2019/experiment/10_person_experiment/graph/lda/contrast_5.tiff", width=14, height=8, units = 'in', res = 500, bg = "transparent")
lda5 + geom_text(data = dat_text,
mapping = aes(x = x, y = y, label = label,
fill = NA),
color = "black",
show.legend = FALSE,
hjust = 0,size = 10)
dev.off()
update.packages(yaml)
update.packages("yaml")
update.packages("knitr")
update.packages("rmarkdown")
